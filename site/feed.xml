<?xml version="1.0" encoding="utf-8"?> <feed xmlns="http://www.w3.org/2005/Atom"><title>11tyframe</title><subtitle>11ty Frame blog</subtitle><link href="https://11tyframe.netlify.com/feed.xml" rel="self"/><link href="https://11tyframe.netlify.com/"/><updated>2019-11-01T01:00:00+01:00</updated><id>https://11tyframe.netlify.com/</id><author><name>octoxalis</name><email>octoxalis@gmail.com</email></author><entry><title>Install 11ty Frame</title><link href="https://11tyframe.netlify.com/posts/install.html"/><updated>2019-11-01T01:00:00+01:00</updated><id>https://11tyframe.netlify.com/posts/install.html</id><content type="html"><h1>Installing 11ty Frame blog</h1><p data--="page_intro">You are just a few lines away from your blog.</p><h2 id="let's_create_a_github_repository">Let's create a Github repository</h2><p>Your first action to create a 11ty Frame site is to fork 11tyframe <a href="https://github.com/octoxalis/11tyframe">repository</a> inside the directory where you want to develop your new site ( on your local computer ), then create a Github repository with the same directory name (for instance, the Github repository for 11ty Frame is 11tyframe. ).</p><p>Install <a href="https://github.com/11ty/eleventy/">Eleventy</a> and the required Node packages locally, as they appear in your <code>package.json</code> file</p><hgroup data--="code_ref"><h5><a href="https://github.com/octoxalis/11tyframe/blob/master/package.json" target="_blank" rel="noreferrer noopener">11tyframe/package.json</a></h5><h6><a href="https://prismjs.com" target="_blank" rel="noreferrer noopener" title="Highlighting provided by Prism.js">Prism</a></h6></hgroup><pre><code class="language-json">
  "dependencies": {
    "html-minifier": "^4.0.0",
    "clean-css": "^4.2.1",
    "uglify-es": "^3.3.9",
    "debug": "^4.1.1",
    "fs-extra": "^8.1.0",
    "klaw-sync": "^6.0.0",
    "markdown-it": "^9.1.0",
    "markdown-it-attrs": "^3.0.1",
    "markdown-it-deflist": "^2.0.3",
    "markdown-it-include": "^1.1.0",
    "markdown-it-link-attributes": "^2.1.0",
    "npx": "^10.2.0",
    "nunjucks": "^3.2.0"
  },
<br/>
</code></pre><h2 id="let's_have_a_post!">Let's have a post!</h2><p>Once installed and deployed (Using Netlify is the easiest way, but any alternative is as simple. ), you have to modify the entries found in the <code>configure.js</code> file located at the root of your source directory (the <code>AUTHOR_s</code> and <code>EMAIL_s</code> properties are slightly different in the <code>configure.js</code> file, but it’s because the 11ty Frame demo site requires real initial values. ).</p><hgroup data--="code_ref"><h5><a href="https://github.com/octoxalis/11tyframe/blob/master/source/configure.js" target="_blank" rel="noreferrer noopener">11tyframe/source/configure.js</a></h5><h6><a href="https://prismjs.com" target="_blank" rel="noreferrer noopener" title="Highlighting provided by Prism.js">Prism</a></h6></hgroup><pre><code class="language-javascript">
AUTHOR_s     : 'yourname',                        //: Your github name
EMAIL_s      : 'yourname@yourmail.com',           //: Your github e-mail
ID_s         : '11tyframe',                       //: Your github repository
NAME_s       : '11ty Frame',                      //: Your site name
URL_s        : `https://11tyframe.netlify.com/`,  //: Your CDN site address
LOCAL_s      : 'http://127.0.0.1:5500/',          //: Your local address and port for development
COLLECTION_s : 'post',                            //: The Eleventy tag for your posts collection
LANGUAGE_s   : 'en',                              //: Site language
<br/>
description_o:                                    //: descriptions for SEO
{
  DESCRIPT_s: '11ty Frame blog',
  GLOBAL_s:   'Eleventy,static site generator',
},
<br/>
</code></pre><p>Once you have completed this step, you just have to rebuilt your site with this command: (from your 11tyframe <code>source</code> directory. )</p><p data--="example">npx eleventy --config=make/11ty/make.js</p><p>Then, begin to write your first posts (probably replacing the <code>index.md</code> and <code>install.md</code> files in the <code>matter/pages</code> directory… )! For thurther help, please refer to the <strong><a href="https://11tytips.netlify.com" target="_blank" rel="noreferrer noopener">11tyTips</a></strong> site which is the model of your fresh new site.</p><h2 id="commenting_or_not_commenting?">Commenting or not commenting?</h2><p>If you want to have comments on some or all of your blog pages, you have to configure 11ty Frame commenting system: <a href="https://github.com/utterance/utterances" target="_blank" rel="noreferrer noopener">utteranc.es</a>. All you have to do is to follow utterances site <a href="https://utteranc.es" target="_blank" rel="noreferrer noopener">instructions</a>.</p><p>If you don’t want to have comments on any page, just add a property <code>no_comments</code> in its frontmatter section: here is what this <code>install</code> page source does, just <em>commenting out</em> (sic) the <code>no_comments</code> property.</p><hgroup data--="code_ref"><h5><a href="https://github.com/octoxalis/11tyframe/blob/master/source/matter/pages/install.md" target="_blank" rel="noreferrer noopener">11tyframe/source/matter/pages/install.md</a></h5><h6><a href="https://prismjs.com" target="_blank" rel="noreferrer noopener" title="Highlighting provided by Prism.js">Prism</a></h6></hgroup><pre><code class="language-javascript">
---js
{
  date:      `2019-11-01`,
  layout:    `frame.njk`,
  permalink: `install.html`,
  tags:      [ `post` ],
<br/>
  eleventyExcludeFromCollections: false,
  no_comments: true,    //: there will be no comments for this page!
<br/>
  title_s:    `Install 11ty Frame`,
  subtitle_s: `How to install your 11ty Frame blog`,
  abstract_s: `Follow these instructions`,
  author_s:   `Me`,
}
---
<br/>
</code></pre><h2 id="removing_11ty_frame_demo_pages">Removing 11ty Frame demo pages</h2><p>Of course, you can remove 11ty Frame demo pages from your personal site (you should first have another <code>index</code> and a <code>post</code> tagged page of your own, otherwise you will get an error when building your site. ), but if you want to keep them in your source directory (for instance to have a handy reference ), without building them in your site, you just have to change two lines in their frontmatter section, replacing ex.1 code by ex.2 code:</p><p data--="example">permalink: ‘install.html’,<br/>tags: [ ‘post’ ],</p><p data--="example">permalink: false,<br/>tags: [],</p><h2 id="configure_your_cdn">Configure your CDN</h2><p>Now you can create a new site at Netlify or at your usual CDN (for Netlify follow Netlify <a href="https://www.netlify.com" target="_blank" rel="noreferrer noopener">page</a> instructions. )and give it the name of your Github repository.</p><p><strong>There you are!</strong> You’re both an Eleventy and 11ty Frame user…</p></content></entry><entry><title>Customize your new site</title><link href="https://11tyframe.netlify.com/posts/customize.html"/><updated>2019-11-01T01:00:00+01:00</updated><id>https://11tyframe.netlify.com/posts/customize.html</id><content type="html"><h1>Change your blog skin</h1><p data--="page_intro">Some options let you modify the skin of your blog.</p><h2 id="configure_according_to_your_preferences">Configure according to your preferences</h2><p>At the root of the source directory there is a <code>configure.js</code> file that you can tweak as you see fit.</p><hgroup data--="code_ref"><h5><a href="https://github.com/octoxalis/11tyframe/blob/master/source/configures.js" target="_blank" rel="noreferrer noopener">11tyframe/source/configures.js</a></h5><h6><a href="https://prismjs.com" target="_blank" rel="noreferrer noopener" title="Highlighting provided by Prism.js">Prism</a></h6></hgroup><pre><code class="language-javascript">
module.exports =
{
  AUTHOR_s:     'octoxalis',                       //: github name
  EMAIL_s:      'octoxalis@gmail.com',             //: github e-mail
  ID_s:         '11tyframe',                       //: github repository
  NAME_s:       '11ty Frame',                      //: site name
  URL_s:        `https://11tyframe.netlify.com/`,  //: CDN deployer
  LOCAL_s:      'http://127.0.0.1:5500/',          //: local address and port for development
  COLLECTION_s: 'post',                            //: Eleventy tag for posts collection
  LANGUAGE_s:   'en',                              //: Site language
<br/>
  description_o:                                   //: descriptions for SEO
  {
    DESCRIPT_s: '11ty Frame blog',
    GLOBAL_s:   'Eleventy,static site generator',
  },
<br/>
  HUE_P_n: 0,        //: theme primary color in range [0...359]
  HUE_L_n: 50,       //: theme link color offset from primary color
  HUE_S_n: -50,      //: theme secondary color offset from primary color
  HUE_I_n: 20,       //: theme important color offset from primary color
  HUE_D_n: -20,      //: theme decorative color offset from primary color
<br/>
  LUM_MODE_n:     1,   //: luminosity mode: 1 (light) || -1 (dark)
  LUM_CONTRAST_n: 40,  //: luminosity contrast in range [30...49] (30 is less contrast than 49)
                       //: see https://www.w3.org/TR/WCAG20/ §1.4.1 compliance
}
<br/>
</code></pre><p>The properties of this configuration file are self-documenting but some of them need a few explanations, notably those properties whose names begin by <em>HUE</em> and <em>LUM</em>.</p><p>All 11ty Frame colors are defined by CSS custom properties and the <em>HUE</em> properties define the variations of these colors:</p><ul data--="ulist"><li><strong>P</strong> stands for primary color;</li><li><strong>L</strong> links color;</li><li><strong>S</strong> secondary color;</li><li><strong>I</strong> important color (something outstanding in your content )</li><li><strong>D</strong> decorative color.</li></ul><p>These properties values are numbers, positive and negative, specifying the variation around the <em>primary</em> color (<code>HUE_P_n</code>) value that you declare. For instance, if you set:</p><p data--="example">HUE_P_n: 153,<br/>HUE_L_n: 50,</p><p>this declaration will yield a link color of <code>203</code> for anchors (<code>153 + 50 = 203</code> ). Similarly, the <em>secondary</em> color (<code>HUE_S_n</code>) will be <code>103</code> (<code>153 - 50 = 103</code> )but you could have well define that property as:</p><p data--="example">HUE_S_n: -30,</p><p>to obtain <code>123</code> as <em>secondary</em> color hue (<code>153 - 30 = 123</code> ). Nothing requires you to have simetrical values for your color variations, you only have to experiment some combinations to get what you consider the optimal result.</p><p>All variations once defined, any visitor of your site will be able to change the base color hue with a single click over the page header, selecting one of the 360 different hues available in the HSL color system used by 11ty Frame. Nevertheless, if you want to prevent the possiblity to change this base color hue, you can do it by setting the <code>HUE_SET_n</code> to <code>0</code> in the <code>configure.js</code> file.</p><h2 id="luminosity_variations_aka_dark_and_light_modes">Luminosity variations AKA dark and light modes</h2><p>Having dark (and light) mode is trendy: 11ty Frame has it, automatically and akin to your color palette!</p><p>And even more: you can define the level of contrast between dark and light mode thanks to the <code>LUM_CONTRAST_n</code> property. It defaults to <code>40</code> and should be kept between <code>30</code> and <code>49</code> for Web Content Accessibility Guidelines (<a href="https://www.w3.org/TR/WCAG20/">WCAG</a>) 2.0 conformance (under 30 you won’t a get a score of 100 when auditing your blog with <em>Lighthouse</em> in Chrome DevTools <a href="https://developers.google.com/web/tools/chrome-devtools/accessibility/reference" target="_blank" rel="noreferrer noopener">accessibility panel</a>. ).</p></content></entry></feed>
